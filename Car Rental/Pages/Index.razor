@page "/"
@using Car_Rental.Business.Classes
@using Car_Rental.Common.Classes;
@using Car_Rental.Common.Interfaces
@using Car_Rental.Common.Enums
@inject BookingProcessor bp
@inject InputValues input

<PageTitle>Car Rental</PageTitle>

<h1>Car Rental</h1>

@if (input.error.Length > 0)
{
    <div style="max-width: 400px" class="alert alert-danger" role="alert">
        <strong>Error!</strong> @input.error
    </div>
}
<br />
<h5>Vehicles</h5>
<fieldset disabled="@input.processing">
    <table style="max-width: 1200px" class="table table-hover table-borderless border border-secondary">
        <thead class="table-dark">
            <tr>
                <th>RegNo</th>
                <th>Make</th>
                <th>Odometer</th>
                <th>Cost / Km</th>
                <th>Vehicle Type</th>
                <th class="text-center">Cost / Day</th>
                <th>Action</th>
                <th class="text-center">Status</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td><input @bind="@input.vehicle.RegNo" placeholder="RegNo" /></td>
                <td><input @bind="@input.vehicle.Make" placeholder="Make" /></td>
                <td><input @bind="@input.vehicle.Odometer" placeholder="Odometer" /></td>
                <td><input @bind="@input.vehicle.CostKm" placeholder="Cost Km" /></td>
                <td>
                    <select @bind="@input.vehicle.Type" class="form-select form-select-sm border border-secondary"
                            aria-label="Vehicle Type">
                        @foreach (var type in Enum.GetValues<VehicleTypes>())
                        {
                            <option value="@type">@type</option>
                        }
                    </select>
                </td>
                <td></td>
                <td>
                    <button class="btn btn-sm btn-outline-success" @onclick="(() => bp.AddVehicle(input.vehicle.RegNo,
                        input.vehicle.Make, input.vehicle.Odometer, input.vehicle.CostKm, input.vehicle.Type))">
                        Add
                    </button>
                </td>
                <td>
                    @if (input.processing)
                    {
                        <span class="badge text-bg-warning text-light">Processing</span>
                    }
                </td>
            </tr>


            @foreach (var v in bp.GetVehicles())
            {
                <tr>
                    <th>@v.RegNo</th>
                    <td>@v.Make</td>
                    <td>@v.Odometer</td>
                    <td>@v.CostKm</td>
                    <td>@v.Type</td>
                    <td class="text-center">@v.CostDay</td>
                    <td>
                        @if (v.Status == VehicleStatuses.Available)
                        {
                            <div class="input-group">
                                <select @bind="@input.selectedCustomer" class="action-width form-select form-select-sm"
                                        aria-label="Costumer">
                                    @foreach (var c in bp.GetCustomers())
                                    {
                                        <option value="@c.Id">@c.LastName @c.FirstName (@c.SSN)</option>
                                    }
                                </select>
                                <button class="btn btn-sm btn-outline-primary" @onclick="(() => 
                                    bp.RentVehicle(v.Id, input.selectedCustomer))">
                                    Rent
                                </button>
                            </div>
                        }
                        else
                        {
                            <div class="input-group">
                                <input @bind="input.distance" class="distance form-control form-control-sm"
                                       placeholder="Distance" aria-label="Distance">
                                <button class="btn btn-sm btn-outline-success" @onclick="(() => 
                                    bp.ReturnVehicle(v.Id, input.distance))">
                                    Return
                                </button>
                            </div>
                        }
                    </td>
                    <td class="text-center">
                        <span class="badge rounded-pill text-bg-@(v.Status == VehicleStatuses.Available 
                            ? "dark" : "danger")">@v.Status</span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</fieldset>
<br />
<h5>Bookings</h5>
<div>
    <table style="max-width: 1000px" class="table table-hover border border-secondary">
        <thead class="table-dark">
            <tr>
                <th>RegNo</th>
                <th>Customer</th>
                <th>Km Rented</th> 
                <th>Km Returned</th> 
                <th>Rented</th>
                <th>Returned</th>
                <th>Cost</th>
                <th class="text-center">Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var b in bp.GetBookings())
            {
                <tr>
                    <th>@b.RegNo</th>
                    <td>@b.Customer.LastName @b.Customer.FirstName (@b.Customer.SSN)</td>
                    <td>@b.KmRented</td>
                    <td>@b.KmReturned</td>
                    <td>@b.Rented.ToShortDateString()</td>
                    <td>
                        @if (b.Returned != null)
                            @b.Returned.Value.ToShortDateString()
                    </td>
                    <td>@b.Cost</td>
                    <td class="text-center">
                        @if (b.Status == VehicleStatuses.Available)
                        {
                            <span class="badge text-bg-success">Closed</span>
                        }
                        else
                        {
                            <span class="badge text-bg-danger">Open</span>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<br />
<h5>Customers</h5>
<div>
    <table style="max-width: 700px" class="table table-hover border border-secondary">
        <thead class="table-dark">
            <tr>
                <th>SSN</th>
                <th>Last Name</th>
                <th>First Name</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td><input @bind="@input.newCustomer.SSN" placeholder="SSN" /></td>
                <td><input @bind="@input.newCustomer.LastName" class="name" placeholder="Last Name" /></td>
                <td>
                    <input @bind="@input.newCustomer.FirstName" class="name" placeholder="First Name" />
                </td>
                <td>
                    <button class="btn btn-sm btn-outline-success" @onclick="(() => bp.AddCustomer
                        (input.newCustomer.SSN, input.newCustomer.LastName, input.newCustomer.FirstName))">
                        Add
                    </button>
                </td>
            </tr>
            @foreach (var c in bp.GetCustomers())
            {
                <tr>
                    <th>@c.SSN</th>
                    <td>@c.LastName</td>
                    <td>@c.FirstName</td>
                    <td></td>
                </tr>
            }
        </tbody>
    </table>
</div>